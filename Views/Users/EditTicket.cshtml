@model BugTrackerProject.Models.Ticket

@{
    ViewBag.Title = "EditTicket";
}

<h2>EditTicket</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ticket</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @if (ViewBag.Submitter)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else if (ViewBag.Developer)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else if (ViewBag.Manager)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.AssignToUserId, "AssignToUserId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AssignToUserId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AssignToUserId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.TicketTypeId, "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@if (Model.TicketAttachments.Count > 0)
{
    foreach (var item in Model.TicketAttachments)
    {
        <img src="@item.FilePath" />
    }
}
@if(Model.TicketComments.Count > 0)
{
    foreach(var item in Model.TicketComments)
    {
        <div>
            <p>
                @Html.DisplayFor(modelItem => item.Comment)
            </p>
            <p>
                @Html.DisplayFor(modelItem => item.Created)
            </p>
        </div>
    }
}
@if(Model.TicketHistories.Count > 0)
{
    foreach(var item in Model.TicketHistories)
    {
        <div>
            <p>
                @Html.DisplayFor(modelItem => item.Changed)
            </p>
            <p>
                @Html.DisplayFor(modelItem => item.OldValue)
            </p>
            <p>
                @Html.DisplayFor(modelItem => item.NewValue)
            </p>
        </div>
    }
}

<div>
    @Html.ActionLink("Back to List", "ListOfTickets")
</div>
